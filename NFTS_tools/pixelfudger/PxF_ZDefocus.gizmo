Group {
name PxF_ZDefocus
help "Defocus an image using RGBAZ data.\n\nThis is a front-end to Foundry's ZDefocus node with extras like:\n\n- Lens simulation (determine the amount of defocus using focal/fstop etc...)\n- More control over the bokeh shape like noise and chroma abb.\n- Built-in conversion for 1/Z depth passes.\n- Streamlined interface."
onCreate "m = nuke.thisNode\nfl = nuke.toNode('Flare1')\n\nfl\['position'].setEnabled(False)"
knobChanged "m = nuke.thisNode()\nkc = nuke.thisKnob()\n\n#Resolution\n#if kc.name() in \['resolution']:\n#  rez = \[1,0.5,0.25,0.125]\n#  dr = nuke.toNode('DeepReformat1')\n#  dr\['scale'].setValue(rez\[int(kc.getValue())])\n  \n\n#Autofocus picker\nif kc.name() in \['autofocus']:\n  mp = nuke.toNode('Shuffle1')\n  px = m\['autofocus'].value(0)\n  py = m\['autofocus'].value(1)\n  dp = mp.sample(\"red\", px, py)\n  m\['focalDistance'].setValue(dp)\n\n#Resolution   \nif kc.name() in \['resolution']:\n  rz = int(m\['resolution'].getValue())\n  m\['truescale'].setValue(rz)\n  \n#Switch unit multiplier\nif kc.name() in \['units']:\n  no = nuke.toNode('NoOp1')\n  conv = \[10.0,1.0,0.1,0.01,0.00001,1/2.54,1/30.48,1/91.44,1.0]\n  unit = m\['units'].getValue()\n  no\['unitMult'].setValue(conv\[int(unit)])\n\n\n\n#Turn on/off lensSim knobs when enableSim is toggled    \nif kc.name() in \['enableSim']:\n  kl = \['units', 'filmBack', 'focalLength','fStop']  \n  if m\['enableSim'].value() == 1:\n    m\['size'].setEnabled(False)\n    for x in kl:\n      m\[x].setEnabled(True)       \n  else:\n    m\['size'].setEnabled(True)\n    for x in kl:\n      m\[x].setEnabled(False)\n\n\n    \n    \n#Loop through all ZDefocus nodes and switch filter modes\nif kc.name() in \['filter']:\n  ft = m\['filter'].value()\n  for zd in nuke.allNodes():\n    if zd.Class() == 'ZDefocus2':  \n      if ft == 'gaussian':\n        zd\['filter_type'].setValue('disc')\n        zd\['shape'].setValue(0)\n      elif ft == 'defocus':\n        zd\['filter_type'].setValue('disc')\n        zd\['shape'].setValue(1)\n      elif ft == 'bokeh':\n        zd\['filter_type'].setValue('image')\n \n\n\n    \n"
tile_color 0x733520ff
addUserKnob {20 ZDefocus}
addUserKnob {26 warn l "" t "Make sure to adjust the number of Deep Slices and the znear and zfar parameters in the DeepSlices tab." +STARTLINE +HIDDEN T "<font color='red'>Please adjust DeepSlices!</font>"}
addUserKnob {4 filter t "Which kind of kernel to apply.\n\nGaussian: Gaussian blur, similar to \"Blur\" node. (Does not simulate \"real\" defocus).\n\nDefocus: Similar to Defocus node. Simulates a lens with a perfectly round aperture.\n\nBokeh: Similar to Convolve node. Use knobs in the Bokeh tab to customize the shape of the aperture (bokeh) or provide your own custom bokeh image with the 'bokeh' input. \n\nFor best results make sure to reformat your bokeh image to 255x255 pixels." M {gaussian defocus bokeh "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
filter defocus
addUserKnob {6 useGPU l "use GPU if available" t "Enable GPU rendering on the built-in ZDefocus nodes." +STARTLINE}
useGPU true
addUserKnob {4 resolution t "Use lower resolutions for faster rendering." M {1:1 1:2 1:4 1:8 "" "" "" ""}}
addUserKnob {4 truescale l "" -STARTLINE +INVISIBLE M {1.0 0.5 0.25 0.125 ""}}
addUserKnob {4 controlChannel l "depth channel" t "This channel (from the RGBAZ input) is used for depth." M {red green blue alpha depth.Z deep.front ""}}
controlChannel depth.Z
addUserKnob {4 depthStyle l "depth style" t "How distance is represented in the depth channel (map input).\n\n1/Z: Values stored in the depth channel represents 1/distance to camera.\n(ScanlineRender outputs 1/Z.)\n\nReal: Values stored in the depth channel represents actual distance to camera.\n\n" M {1/Z Real "" ""}}
depthStyle Real
addUserKnob {12 autofocus t "Use the autofocus widget in the Viewer to pick the focus plane (i.e. which area is sharp/in focus).\n\n(Make sure your Viewer resolution is set to 1:1.)"}
autofocus {100 100}
addUserKnob {7 focalDistance l "focus plane" t "How far, in front of the camera, is the sharp/'in focus' area. (In real world units).\n\nUse the 'autofocus' widget to pick this value automatically in the Viewer." R 0 10000}
focalDistance 100
addUserKnob {7 size t "The 'amount' of defocus at infinity (in pixels).\n\nObjects close to camera might be more defocused than this.\n\nNot used if lens simulation is 'on'." R 1 300}
size 15
addUserKnob {7 maxSize l "max size" t "Maximum size of defocus, in pixels.\nUse this to prevent huge defocus values when objects are really close to camera." R 0 500}
maxSize 100
addUserKnob {7 aspect t "Aspect ratio of the bokeh. Use this to simulate 'oval' bokeh from an anamorphic lens." R 0 4}
aspect 1
addUserKnob {3 slices +DISABLED +INVISIBLE}
slices 15
addUserKnob {6 autoSlices l "automatic slices" -STARTLINE +INVISIBLE}
autoSlices true
addUserKnob {7 mix t "Dissolve between the original (0) and the full effect (1)."}
mix 1
addUserKnob {26 ""}
addUserKnob {26 Credits l "" t "PxF_ZDefocus 1.0 - &copy; 2022-2023 - Xavier Bourque - pixelfudger.com \n\nPixelfudger gizmos are free to use for personal and commercial use as long as you leave the credit text intact in the gizmo's knobs and in the source files. " +STARTLINE T "<font size=2>PxF_ZDefocus 1.0 - &copy; 2022-2023 - </font><a href=\"http://www.xavierbourque.com\"><font color=\"#bbbbbb\" size=2>Xavier Bourque</a></font> - <a href=\"http://www.pixelfudger.com\"><font color=\"#bbbbbb\" size=2>pixelfudger.com</a></font> - <a href=\"http://www.pixelfudger.com/userguides/PxF_ZDefocus.html\"><font color=\"#bbbbbb\" size=2>Video Tutorial</a></font>"}
addUserKnob {20 lensSim l "Lens Simulation" -STARTLINE}
addUserKnob {6 enableSim l "Enable Lens Simulation" t "Compute the amount of defocus using real world lens information. " -STARTLINE}
addUserKnob {4 units l "world scale" t "Specifies which real-world units are used in the depth pass.\n\nThe values in the depth channel of your image should represent how far each pixel is from the camera in real world units." +DISABLED M {mm cm dm m km inch feet yards "" "" "" "" "" "" "" "" "" "" ""}}
units cm
addUserKnob {7 focalLength l "focal length" t "Focal length of the lens in mm." +DISABLED R 0 300}
focalLength 50
addUserKnob {7 fStop t "Aperture of the lens in fStop." +DISABLED R 0 22}
fStop 1.4
addUserKnob {7 filmBack l "filmback width" t "Width of camera sensor in mm." +DISABLED R 0 70}
filmBack 36
addUserKnob {20 Bokeh}
addUserKnob {6 viewKernel l viewBokeh t "View the image being used as the kernel when the filter mode is set to 'Bokeh'. Use this to see what you're doing when adjusting the kernel shape.\n\nDon't forget to turn it off when you're done!" +STARTLINE}
addUserKnob {26 "" l "@b;Colors"}
addUserKnob {7 ringWidth t "Thickness of the 'donut' around the edge of the kernel."}
ringWidth 0.25
addUserKnob {41 ring_color l "ring color" t "Color of the 'donut' around the edge of the kernel." T Flare1.ring_color}
addUserKnob {41 inner_color l "inner color" t "Color of the center of the kernel." T Flare1.inner_color}
addUserKnob {41 outer_falloff l "outer falloff" t "Falloff on the outer edge of the 'donut'." T Flare1.outer_falloff}
addUserKnob {41 inner_falloff l "inner falloff" t "Falloff on the inner edge of the 'donut'." T Flare1.inner_falloff}
addUserKnob {26 _1 l "@b;Shape"}
addUserKnob {41 corners t "How many 'blades' are in the iris." T Flare1.corners}
addUserKnob {41 flattening l "edge flattening" t "0 = round aperture (no blades).\n1 = flat edges between corners." T Flare1.flattening}
addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
addUserKnob {41 corners_angle l angle t "Rotate the aperture." T Flare1.corners_angle}
addUserKnob {26 Noise l "@b;Noise"}
addUserKnob {6 enableNoise l enable t "Add noise to the bokeh." +STARTLINE}
enableNoise true
addUserKnob {7 noiseSize l size t "Size of the noise." R 0 50}
noiseSize 35
addUserKnob {7 noiseGain l gain t "Gain of the noise."}
noiseGain 0.85
addUserKnob {7 noiseGamma l gamma t "Gamma of the noise."}
noiseGamma 0.85
addUserKnob {7 noiseMix l mix t "Adjusts how much noise is present in the bokeh."}
noiseMix 0.33
addUserKnob {26 ChromaAb l "@b;Chroma Aberration"}
addUserKnob {6 chromaAbEnable l enable t "Enable chroma aberration on the bokeh.\n\nMake sure to set filter channels to rgb colour." +STARTLINE}
chromaAbEnable true
addUserKnob {7 chromaAbScale l scale t "Amount of chroma aberration on the bokeh. 1.0 = no chroma aberration." R 0 2}
chromaAbScale 1.02
addUserKnob {26 ""}
addUserKnob {4 filterChannel l "filter channel" t "When using Bokeh mode, which channels to use from the bokeh image.\n\nrgb luma: Use the RGB luminance of the bokeh input to defocus all channels.\n\nrgb colour: Use the RGB channels to defocus RGB and RGB luminance to defocus the alpha." M {"rgb luminance" "rgb colour" "" "" "" "" "" ""}}
filterChannel "rgb colour"
}
Input {
inputs 0
name mask
label static
xpos 4206
ypos -168
number 2
}
Input {
inputs 0
name RGBAZ
label static
xpos 3868
ypos -1988
}
set Nbb4c4c00 [stack 0]
Dot {
name Dot2
note_font_size 22
xpos 2960
ypos -1883
}
Dot {
name Dot1
label static
note_font_size 22
xpos 2960
ypos -703
}
set N956be800 [stack 0]
Input {
inputs 0
name bokeh
label static
xpos 4150
ypos -1438
number 1
}
Keyer {
operation "luminance key"
name Keyer4
label static
xpos 4150
ypos -1336
}
Reformat {
type "to box"
box_width 255
box_height 255
box_fixed true
black_outside true
name Reformat6
label static
xpos 4150
ypos -1225
}
Reformat {
inputs 0
type "to box"
box_width 501
box_height 501
box_fixed true
name Reformat4
label static
xpos 4435
ypos -1479
}
set N956ae800 [stack 0]
Noise {
size {{parent.noiseSize i}}
gain {{parent.noiseGain i}}
gamma {{parent.noiseGamma i}}
center {1440 810}
name Noise1
label static
xpos 4506
ypos -1433
}
push $N956ae800
Flare {
position {{"250 * 1"} {"250 * 1"}}
radius {0 {"249 - (parent.ringWidth*249)"} 249}
inner_color 0.75
outer_falloff 0.35
inner_falloff 10
vis_in 0
vis_out 1
vis_mask_size 0
corners 8
flattening 0.9
sharpness 0.99
name Flare1
label static
xpos 4362
ypos -1421
}
Merge2 {
inputs 2
operation multiply
mix {{parent.noiseMix i}}
name Merge1
label static
xpos 4443
ypos -1354
disable {{parent.enableNoise?0:1 i}}
}
Shuffle {
alpha red
name Shuffle2
label static
xpos 4443
ypos -1309
}
TransformMasked {
channels {rgba.red -rgba.green -rgba.blue none}
scale {{parent.chromaAbScale}}
center {250.5 250.5}
name Transform1
label static
xpos 4443
ypos -1271
disable {{"parent.chromaAbEnable ? 0 : 1"}}
}
TransformMasked {
channels {-rgba.red -rgba.green rgba.blue none}
scale {{"1 / parent.chromaAbScale"}}
center {250.5 250.5}
name Transform2
label static
xpos 4443
ypos -1208
disable {{"parent.chromaAbEnable ? 0 : 1"}}
}
Reformat {
type "to box"
box_width 255
box_height 255
box_fixed true
scale 0.5
name Reformat1
label static
xpos 4443
ypos -1154
}
Switch {
inputs 2
which {{"\[exists parent.input1]"}}
name Switch3
label static
xpos 4352
ypos -1085
}
set N69a87000 [stack 0]
push $N69a87000
Reformat {
type scale
scale {{parent.aspect} 1}
resize distort
name Reformat32
label static
xpos 4352
ypos -998
}
push $Nbb4c4c00
Shuffle {
in deep
green black
blue black
alpha black
name Shuffle7
label "static\ndepth"
xpos 3651
ypos -1819
}
push $Nbb4c4c00
Shuffle {
in depth
red alpha
green black
blue black
alpha black
name Shuffle6
label "static\ndepth"
xpos 3537
ypos -1820
}
push $Nbb4c4c00
Shuffle {
red alpha
green black
blue black
alpha black
name Shuffle5
label "static\nalpha"
xpos 3444
ypos -1818
}
push $Nbb4c4c00
Shuffle {
red blue
green black
blue black
alpha black
name Shuffle4
label "static\nblue"
xpos 3344
ypos -1819
}
push $Nbb4c4c00
Shuffle {
red green
green black
blue black
alpha black
name Shuffle8
label "static\ngreen"
xpos 3254
ypos -1814
}
push $Nbb4c4c00
Shuffle {
green black
blue black
alpha black
name Shuffle9
label "static\nred"
xpos 3158
ypos -1816
}
Switch {
inputs 6
which {{parent.controlChannel}}
name Switch1
label "static\ncontrolChannel"
xpos 3344
ypos -1715
}
Expression {
expr0 "r > 0 ? 1/r : 100000000"
name Expression1
label "static\n1/Z to real"
xpos 3344
ypos -1635
disable {{"parent.depthStyle == 1"}}
}
set N39a4d000 [stack 0]
Dot {
name Dot3
note_font_size 22
xpos 3378
ypos -1537
}
Reformat {
type scale
scale {{"\[value parent.truescale]"}}
filter impulse
name Reformat5
label static
xpos 3676
ypos -1518
}
push $Nbb4c4c00
Reformat {
type scale
scale {{"\[value parent.truescale]"}}
filter impulse
name Reformat3
label static
xpos 3858
ypos -1656
}
Copy {
inputs 2
from0 rgba.red
to0 depth.Z
name Copy1
xpos 3858
ypos -1497
}
ZDefocus2 {
inputs 2
useGPUIfAvailable {{parent.useGPU}}
math depth
center {{parent.focalDistance}}
blur_dof false
size {{"parent.enableSim ? NoOp1.defoAtInfinity * \[value parent.truescale] : parent.size * \[value parent.truescale]"}}
max_size {{"parent.maxSize * \[value parent.truescale]"}}
autoLayerSpacing {{parent.autoSlices}}
layers {{parent.slices}}
legacy_resize_mode false
use_input_channels {{parent.filterChannel}}
aspect {{parent.aspect}}
name ZDefocus1
label static
xpos 3858
ypos -916
disable {{"parent.disableDefocus && parent.inspectSlices"}}
}
Reformat {
type scale
scale {{"1 / \[value parent.truescale]"}}
name Reformat2
label static
xpos 3858
ypos -526
}
Switch {
inputs 2
which {{parent.viewKernel}}
name Switch2
label "static\nviewKernel"
xpos 3858
ypos -397
}
Keymix {
inputs 3
invertMask true
bbox B
name Keymix1
label static
xpos 3858
ypos -174
disable {{"\[exists parent.input2] ? 0 : 1" x1 0}}
}
push $N956be800
Dissolve {
inputs 2
which {{parent.mix}}
name Dissolve1
label static
xpos 3858
ypos -27
}
Output {
name Output1
label static
xpos 3858
ypos 100
}
push $N39a4d000
Shuffle {
green black
blue black
alpha black
name Shuffle1
label "static\nfor autofocus picker"
xpos 3137
ypos -1466
}
NoOp {
name NoOp1
label static
xpos 3137
ypos -1385
addUserKnob {20 User}
addUserKnob {7 unitMult}
unitMult 1
addUserKnob {7 focalDistanceCM}
focalDistanceCM {{"parent.focalDistance / unitMult"}}
addUserKnob {7 reallyFar}
reallyFar 10000000
addUserKnob {7 defoAtInfinity}
defoAtInfinity {{"((fabs((parent.focalLength/parent.fStop)*(((reallyFar-(focalDistanceCM*10))/reallyFar)*(parent.focalLength/((focalDistanceCM*10)-parent.focalLength))))) * (width/parent.filmBack) / 2)"}}
}
end_group
